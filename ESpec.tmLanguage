<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>exs</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(?x)^
	    (\s*+
	        (module|class|def
	        |background|feature|subscribe
	        |before|describe|it|scenario
	        |unless|if
	        |case
	        |begin
	        |for|while|until
			 |^=begin
	        |(  "(\\.|[^"])*+"          # eat a double quoted string
	         | '(\\.|[^'])*+'        # eat a single quoted string
	         |   [^#"']                # eat all but comments and strings
	         )*
	         (                        \s   (do|begin|case)
	         | (?&lt;!\$)[-+=&amp;|*/~%^&lt;&gt;~] \s*+ (if|unless)
	         )
	        )\b
	        (?! [^;]*+ ; .*? \bend\b )
	    |(  "(\\.|[^"])*+"              # eat a double quoted string
	     | '(\\.|[^'])*+'            # eat a single quoted string
	     |   [^#"']                    # eat all but comments and strings
	     )*
	     ( \{ (?!  [^}]*+ \} )
	     | \[ (?! [^\]]*+ \] )
	     )
	    ).*$
	|   [#] .*? \(fold\) \s*+ $         # Sune’s special marker
	</string>
	<key>foldingStopMarker</key>
	<string>(?x)
		(   (^|;) \s*+ end   \s*+ ([#].*)? $
		|   (^|;) \s*+ end \. .* $
		|   ^     \s*+ [}\]] \s*+ ([#].*)? $
		|   [#] .*? \(end\) \s*+ $    # Sune’s special marker
		|   ^=end
		)</string>
	<key>keyEquivalent</key>
	<string>^~R</string>
	<key>name</key>
	<string>ESpec</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.)\b(before\b|after\b|subject\b!?|let\b!?)</string>
			<key>name</key>
			<string>keyword.other.espec</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#behaviour</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#single-line-example</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#pending</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#example</string>
		</dict>
		<dict>
			<key>include</key>
			<string>source.elixir</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>behaviour</key>
		<dict>
			<key>begin</key>
			<string>^\s*(?:(ESpec)\.)?(describe|context|feature)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.class.elixir</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.espec.behaviour</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(do(?=\s*$))|{</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.elixir.start-block</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.espec.behaviour</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.elixir</string>
				</dict>
			</array>
		</dict>
		<key>example</key>
		<dict>
			<key>begin</key>
			<string>^\s*(it|specify|scenario)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.espec.example</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b((do:)|(do(?=\s*$)))|\{$</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.elixir.start-block</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.espec.example</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.elixir</string>
				</dict>
			</array>
		</dict>
		<key>pending</key>
		<dict>
			<key>begin</key>
			<string>^\s*(it|specify|scenario)\b(?=((?!do|{).)*$)</string>
			<key>end</key>
			<string>$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.espec.pending</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.elixir</string>
				</dict>
			</array>
			<key>name</key>
			<string>meta.espec.pending</string>
		</dict>
		<key>single-line-example</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.espec.example</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(it|specify|scenario)\s*{</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.elixir.espec</string>
	<key>uuid</key>
	<string>923F0A10-96B9-4792-99A4-94FEF66E0B8C</string>
</dict>
</plist>
